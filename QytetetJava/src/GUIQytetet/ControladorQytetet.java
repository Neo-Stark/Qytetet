/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIQytetet;

import modeloqytetet.*;
import java.util.ArrayList;
import java.util.HashMap;
//import InterfazTextualQytetet.VistaTextualQytetet;

/**
 *
 * @author fran
 */
import javax.swing.JOptionPane;

public class ControladorQytetet extends javax.swing.JFrame {

   Qytetet modeloQytetet;

   /**
    * Creates new form ControladorQytetet
    */
   public ControladorQytetet() {
      initComponents();
   }

   public void habilitarComenzarTurno() {
      this.jbComprar.setEnabled(false);
      this.jbPasaTurno.setEnabled(false);
      this.jbAplicarSorpresa.setEnabled(false);
      this.jbGestionInmobiliaria.setEnabled(false);
      if (modeloQytetet.getJugadorActual().isEncarcelado()) {
         this.jbCarcelPagando.setEnabled(true);
         this.jbCarcelDado.setEnabled(true);
      } else {
         this.jbJugar.setEnabled(true);
         this.jbCarcelPagando.setEnabled(false);
         this.jbCarcelDado.setEnabled(false);
      }
   }

   public void actualizar(Qytetet juego) {
      habilitarComenzarTurno();
      vistaQytetet.actualizar(juego);
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbCarcelDado = new javax.swing.JButton();
        jbComprar = new javax.swing.JButton();
        jbCarcelPagando = new javax.swing.JButton();
        jbJugar = new javax.swing.JButton();
        jbAplicarSorpresa = new javax.swing.JButton();
        jbPasaTurno = new javax.swing.JButton();
        vistaQytetet = new GUIQytetet.VistaQytetet();
        jbGestionInmobiliaria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbCarcelDado.setText("Salir Carcel Dado");
        jbCarcelDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCarcelDadoActionPerformed(evt);
            }
        });

        jbComprar.setText("Comprar");
        jbComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbComprarActionPerformed(evt);
            }
        });

        jbCarcelPagando.setText("Salir Carcel Pagando");
        jbCarcelPagando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCarcelPagandoActionPerformed(evt);
            }
        });

        jbJugar.setText("Jugar");
        jbJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbJugarActionPerformed(evt);
            }
        });

        jbAplicarSorpresa.setText("Aplicar Sorpresa");
        jbAplicarSorpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAplicarSorpresaActionPerformed(evt);
            }
        });

        jbPasaTurno.setText("Pasa Turno");
        jbPasaTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPasaTurnoActionPerformed(evt);
            }
        });

        jbGestionInmobiliaria.setText("Gestion Inmobiliaria");
        jbGestionInmobiliaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGestionInmobiliariaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbCarcelDado, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbCarcelPagando)
                                .addGap(18, 18, 18)))
                        .addComponent(jbJugar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbGestionInmobiliaria, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbAplicarSorpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPasaTurno)
                    .addComponent(jbComprar))
                .addGap(18, 28, Short.MAX_VALUE))
            .addComponent(vistaQytetet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbAplicarSorpresa, jbComprar, jbPasaTurno});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(vistaQytetet, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbAplicarSorpresa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbPasaTurno)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbComprar)
                            .addComponent(jbGestionInmobiliaria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbCarcelDado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbCarcelPagando))
                            .addComponent(jbJugar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbGestionInmobiliaria.getAccessibleContext().setAccessibleName("jbGestionInmobiliaria");
        jbGestionInmobiliaria.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbPasaTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPasaTurnoActionPerformed
       modeloQytetet.siguienteJugador();
       this.actualizar(modeloQytetet);
    }//GEN-LAST:event_jbPasaTurnoActionPerformed

    private void jbCarcelPagandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCarcelPagandoActionPerformed
       boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.PAGANDOLIBERTAD);
       this.jbCarcelPagando.setEnabled(false);
       this.jbCarcelDado.setEnabled(false);
       if (resultado) {
          JOptionPane.showMessageDialog(this, "Sales de la c√°rcel");
          this.jbJugar.setEnabled(true);
       } else {
          JOptionPane.showMessageDialog(this, "NO sales de la carcel");
          this.jbPasaTurno.setEnabled(true);
       }
       this.actualizar(modeloQytetet);
    }//GEN-LAST:event_jbCarcelPagandoActionPerformed

    private void jbJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbJugarActionPerformed
       boolean tienePropietario = modeloQytetet.jugar();
       vistaQytetet.actualizar(modeloQytetet);
       Casilla casilla = modeloQytetet.getJugadorActual().getCasillaActual();
       this.jbJugar.setEnabled(false);
       this.jbPasaTurno.setEnabled(true);
       this.activarGestionInmobiliaria();
       switch (casilla.getTipo()) {
          case SORPRESA:
             JOptionPane.showMessageDialog(this, "Has caido en una casilla sorpresa!!!!");
             this.jbPasaTurno.setEnabled(false);
             this.jbGestionInmobiliaria.setEnabled(false);
             this.jbAplicarSorpresa.setEnabled(true);
             break;
          case PARKING:
             JOptionPane.showMessageDialog(this, "Has entrado en el parking");
             break;
          case CARCEL:
             if (modeloQytetet.getJugadorActual().isEncarcelado()) {
                this.jbGestionInmobiliaria.setEnabled(false);
                JOptionPane.showMessageDialog(this, "El juez te manda directamente a la carcel");
             } else {
                JOptionPane.showMessageDialog(this, "Haces una visita a la c√°rcel");
             }
             break;
          case IMPUESTO:
             JOptionPane.showMessageDialog(this, "Pagas los impuestos");
             break;
          case CALLE:
             caerCalle((Calle) casilla);
             break;
       }
       if (modeloQytetet.getJugadorActual().getSaldo() < 0) {
          JOptionPane.showMessageDialog(this, "Jugador: " + modeloQytetet.getJugadorActual().getNombre()
              + "en bancarrota\nRANKING:\n" + modeloQytetet.obtenerRanking());
          this.dispose();
       }
    }//GEN-LAST:event_jbJugarActionPerformed
   private void caerCalle(Calle calle) {
      if (!calle.getTitulo().tengoPropietario()) {
         JOptionPane.showMessageDialog(this, "Has caido en una calle sin propietario.");
         this.jbComprar.setEnabled(true);
         this.jbPasaTurno.setEnabled(true);
         this.jbJugar.setEnabled(false);
         this.activarGestionInmobiliaria();
      } else if (calle.getTitulo().getPropietario() != modeloQytetet.getJugadorActual()) {
         JOptionPane.showMessageDialog(this, "Esta casilla tiene propietario");
         int coste = (calle.getCoste());
         String propietario = (calle.getTitulo().getPropietario().getNombre());
         JOptionPane.showMessageDialog(this, "Has caido en una calle sin propietario"
             + "Le pagas " + coste + " a " + propietario);
         this.jbJugar.setEnabled(false);
         this.jbPasaTurno.setEnabled(true);
         this.activarGestionInmobiliaria();
      }
   }
    private void jbAplicarSorpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAplicarSorpresaActionPerformed
       JOptionPane.showMessageDialog(this, "Aplicando Sopresa...");
       this.jbJugar.setEnabled(false);
       this.jbPasaTurno.setEnabled(true);
       this.jbAplicarSorpresa.setEnabled(false);

       TipoSorpresa tipoSorpresa = modeloQytetet.getCartaActual().getTipo();
       modeloQytetet.aplicarSorpresa();
       Casilla casilla = modeloQytetet.getJugadorActual().getCasillaActual();
       vistaQytetet.actualizar(modeloQytetet);
       if (tipoSorpresa == TipoSorpresa.IRACASILLA) {
          if (casilla.getTipo() == TipoCasilla.CARCEL) {
             JOptionPane.showMessageDialog(this, "Estas en la carcel");
             this.jbJugar.setEnabled(false);
             this.jbPasaTurno.setEnabled(true);
          } else if (casilla.getTipo() == TipoCasilla.CALLE) {
             caerCalle((Calle) casilla);
          }
       }
       activarGestionInmobiliaria();
    }//GEN-LAST:event_jbAplicarSorpresaActionPerformed

    private void jbGestionInmobiliariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGestionInmobiliariaActionPerformed
       int eleccion;
       do {
          eleccion = Integer.parseInt(JOptionPane.showInputDialog("Gestion Inmobiliaria.\n0 : Pasar  turno"
              + "\n1 : Construir Casa" + "\n2 : Construir Hotel" + "\n3 : Vender Propiedad" + "\n4 : Hipotecar"
              + "\n5 : Cancelar Hipoteca"));
          if (eleccion != 0) {
             this.accionGestion(eleccion);
          }
       } while (eleccion != 0);
    }//GEN-LAST:event_jbGestionInmobiliariaActionPerformed
   private void accionGestion(int eleccion) {
      ArrayList<Casilla> propiedades;
      if (eleccion != 5) {
         propiedades = modeloQytetet.propiedadesHipotecadasJugador(false);
      } else {
         propiedades = modeloQytetet.propiedadesHipotecadasJugador(true);
      }
      if (!propiedades.isEmpty()) {
         Casilla modCasilla = elegirPropiedad(propiedades);

         switch (eleccion) {
            case 1:
               if (modeloQytetet.edificarCasa(modCasilla)) {
                  JOptionPane.showMessageDialog(this, "Has edificado una casa en "
                      + ((Calle) modCasilla).getTitulo().getNombre());
               } else {
                  JOptionPane.showMessageDialog(this, "No has podido edificar la casa.");
               }
               break;

            case 2:
               if (!(modCasilla == null)) {
                  if (modeloQytetet.edificarHotel(modCasilla)) {
                     JOptionPane.showMessageDialog(this, "Has edificado un hotel en "
                         + ((Calle) modCasilla).getTitulo().getNombre());
                  } else {
                     JOptionPane.showMessageDialog(this, "No has podido edificar el hotel.");
                  }
               }
               break;

            case 3:
               if (!(modCasilla == null)) {
                  if (modeloQytetet.venderPropiedad(modCasilla)) {
                     JOptionPane.showMessageDialog(this, "Has vendido la propiedad "
                         + ((Calle) modCasilla).getTitulo().getNombre());
                  } else {
                     JOptionPane.showMessageDialog(this, "No has podido vender la propiedad");
                  }
               }
               break;

            case 4:
               if (modeloQytetet.hipotecarPropiedad(modCasilla)) {
                  JOptionPane.showMessageDialog(this, "Has hipotecado la propiedad "
                      + ((Calle) modCasilla).getTitulo().getNombre());
               } else {
                  JOptionPane.showMessageDialog(this, "No has podido hipotecar la propiedad");
               }
               break;

            case 5:
               if (modeloQytetet.cancelarHipoteca(modCasilla)) {
                  JOptionPane.showMessageDialog(this, "Has cancelado la hipoteca de "
                      + ((Calle) modCasilla).getTitulo().getNombre());
               } else {
                  JOptionPane.showMessageDialog(this, "No has podido cancelar la hipoteca");
               }
               break;
         }
      } else {
         JOptionPane.showMessageDialog(this, "No tienes propiedades disponibles"
             + "para la accion que quieres realizar");
      }
      vistaQytetet.actualizar(modeloQytetet);
   }

   private Casilla elegirPropiedad(ArrayList<Casilla> propiedades) {

      HashMap<Integer, String> calles = new HashMap<>();

      for (Integer i = 0; i < propiedades.size(); i++) {
         calles.put(i, ((Calle) propiedades.get(i)).getTitulo().getNombre());
      }

      int calle = Integer.parseInt(JOptionPane.showInputDialog(calles));

      return propiedades.get(calle);
   }
    private void jbComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbComprarActionPerformed
       boolean puedeComprar = modeloQytetet.comprarTituloPropiedad();
       Casilla casilla = modeloQytetet.getJugadorActual().getCasillaActual();
       if (puedeComprar) {
          JOptionPane.showMessageDialog(this, "Compra realizada");
          JOptionPane.showMessageDialog(this, "Coste: " + ((Calle) casilla).getCoste()
              + "\nSaldo final: " + modeloQytetet.getJugadorActual().getSaldo());
       } else {
          JOptionPane.showMessageDialog(this, "¬øDe verdad pensaste que pod√≠as comprar estando a dos velas?");
       }

       vistaQytetet.actualizar(modeloQytetet);
       this.jbComprar.setEnabled(false);
       this.jbJugar.setEnabled(false);
       this.jbPasaTurno.setEnabled(true);
       this.activarGestionInmobiliaria();
    }//GEN-LAST:event_jbComprarActionPerformed

    private void jbCarcelDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCarcelDadoActionPerformed
       boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.TIRANDODADO);

       this.jbCarcelDado.setEnabled(false);
       this.jbCarcelPagando.setEnabled(false);

       if (resultado) {
          JOptionPane.showMessageDialog(this, "Sales de la c√°rcel");
          this.jbJugar.setEnabled(true);
       } else {
          JOptionPane.showMessageDialog(this, "NO sales de la carcel");
          this.jbPasaTurno.setEnabled(true);
       }

       vistaQytetet.actualizar(modeloQytetet);
    }//GEN-LAST:event_jbCarcelDadoActionPerformed
   private void activarGestionInmobiliaria() {
      if (modeloQytetet.getJugadorActual().tengoPropiedades()) {
         this.jbGestionInmobiliaria.setEnabled(true);
      } else {
         this.jbGestionInmobiliaria.setEnabled(false);
      }

   }

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      ControladorQytetet controladorQytetet = new ControladorQytetet();
      Dado.createInstance(controladorQytetet);

      CapturaNombreJugadores capturaNombres
          = new CapturaNombreJugadores(controladorQytetet, true);
      ArrayList<String> nombres = capturaNombres.obtenerNombres();
      controladorQytetet.modeloQytetet = Qytetet.getInstance();
      controladorQytetet.modeloQytetet.inicicializarJuego(nombres);
      controladorQytetet.actualizar(Qytetet.getInstance());

      controladorQytetet.setVisible(true);
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAplicarSorpresa;
    private javax.swing.JButton jbCarcelDado;
    private javax.swing.JButton jbCarcelPagando;
    private javax.swing.JButton jbComprar;
    private javax.swing.JButton jbGestionInmobiliaria;
    private javax.swing.JButton jbJugar;
    private javax.swing.JButton jbPasaTurno;
    private GUIQytetet.VistaQytetet vistaQytetet;
    // End of variables declaration//GEN-END:variables
}
